try{self["workbox:window:6.5.4"]&&_()}catch(t){}function t(t,s){return new Promise((e=>{const i=new MessageChannel;i.port1.onmessage=t=>{e(t.data)},t.postMessage(s,[i.port2])}))}try{self["workbox:core:6.5.4"]&&_()}catch(t){}class s{constructor(){this.promise=new Promise(((t,s)=>{this.resolve=t,this.reject=s}))}}function e(t,s){const{href:e}=location;return new URL(t,e).href===new URL(s,e).href}class i{constructor(t,s){this.type=t,Object.assign(this,s)}}const n={type:"SKIP_WAITING"};class r extends class{constructor(){this.St=new Map}addEventListener(t,s){this.Lt(t).add(s)}removeEventListener(t,s){this.Lt(t).delete(s)}dispatchEvent(t){t.target=this;const s=this.Lt(t.type);for(const e of s)e(t)}Lt(t){return this.St.has(t)||this.St.set(t,new Set),this.St.get(t)}}{constructor(t,n={}){super(),this.It={},this.Bt=0,this.Tt=new s,this.Mt=new s,this.At=new s,this.Gt=0,this.Kt=new Set,this.Nt=()=>{const t=this.zt,s=t.installing;this.Bt>0||!e(s.scriptURL,this.Dt.toString())||performance.now()>this.Gt+6e4?(this.Ft=s,t.removeEventListener("updatefound",this.Nt)):(this.Ht=s,this.Kt.add(s),this.Tt.resolve(s)),++this.Bt,s.addEventListener("statechange",this.Jt)},this.Jt=t=>{const s=this.zt,e=t.target,{state:n}=e,r=e===this.Ft,a={sw:e,isExternal:r,originalEvent:t};!r&&this.Qt&&(a.isUpdate=!0),this.dispatchEvent(new i(n,a)),"installed"===n?this.Vt=self.setTimeout((()=>{"installed"===n&&s.waiting===e&&this.dispatchEvent(new i("waiting",a))}),200):"activating"===n&&(clearTimeout(this.Vt),r||this.Mt.resolve(e))},this.Xt=t=>{const s=this.Ht,e=s!==navigator.serviceWorker.controller;this.dispatchEvent(new i("controlling",{isExternal:e,originalEvent:t,sw:s,isUpdate:this.Qt})),e||this.At.resolve(s)},this.Yt=async t=>{const{data:s,ports:e,source:n}=t;await this.getSW(),this.Kt.has(n)&&this.dispatchEvent(new i("message",{data:s,originalEvent:t,ports:e,sw:n}))},this.Dt=t,this.It=n,navigator.serviceWorker.addEventListener("message",this.Yt)}async register({immediate:t=!1}={}){t||"complete"===document.readyState||await new Promise((t=>window.addEventListener("load",t))),this.Qt=Boolean(navigator.serviceWorker.controller),this.Zt=this.ts(),this.zt=await this.ss(),this.Zt&&(this.Ht=this.Zt,this.Mt.resolve(this.Zt),this.At.resolve(this.Zt),this.Zt.addEventListener("statechange",this.Jt,{once:!0}));const s=this.zt.waiting;return s&&e(s.scriptURL,this.Dt.toString())&&(this.Ht=s,Promise.resolve().then((()=>{this.dispatchEvent(new i("waiting",{sw:s,wasWaitingBeforeRegister:!0}))})).then((()=>{}))),this.Ht&&(this.Tt.resolve(this.Ht),this.Kt.add(this.Ht)),this.zt.addEventListener("updatefound",this.Nt),navigator.serviceWorker.addEventListener("controllerchange",this.Xt),this.zt}async update(){this.zt&&await this.zt.update()}get active(){return this.Mt.promise}get controlling(){return this.At.promise}getSW(){return void 0!==this.Ht?Promise.resolve(this.Ht):this.Tt.promise}async messageSW(s){return t(await this.getSW(),s)}messageSkipWaiting(){this.zt&&this.zt.waiting&&t(this.zt.waiting,n)}ts(){const t=navigator.serviceWorker.controller;return t&&e(t.scriptURL,this.Dt.toString())?t:void 0}async ss(){try{const t=await navigator.serviceWorker.register(this.Dt,this.It);return this.Gt=performance.now(),t}catch(t){throw t}}}export{r as Workbox,i as WorkboxEvent,t as messageSW};