"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3200,2591,4182,1801],{79044:(e,t,n)=>{n.d(t,{A:()=>b,B:()=>h});var s=n(86326),a=n(97598),r=n.n(a),i=n(70574),o=n(95261),c=n(35647),d=n(55630);const u={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4,HYDRATE_REPORT:5},l={id:"measurementTracking",initial:"idle",context:{activeViewportId:null,trackedStudy:"",trackedSeries:[],ignoredSeries:[],prevTrackedStudy:"",prevTrackedSeries:[],prevIgnoredSeries:[],ignoredSRSeriesForHydration:[],isDirty:!1},states:{off:{type:"final"},labellingOnly:{on:{TRACK_SERIES:[{target:"promptLabelAnnotation",actions:["setPreviousState"]},{target:"off"}]}},idle:{entry:"clearContext",on:{TRACK_SERIES:[{target:"promptLabelAnnotation",cond:"isLabelOnMeasure",actions:["setPreviousState"]},{target:"promptBeginTracking",actions:["setPreviousState"]}],SET_TRACKED_SERIES:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","setIsDirtyToClean"]}],PROMPT_HYDRATE_SR:{target:"promptHydrateStructuredReport",cond:"hasNotIgnoredSRSeriesForHydration"},RESTORE_PROMPT_HYDRATE_SR:"promptHydrateStructuredReport",HYDRATE_SR:"hydrateStructuredReport",UPDATE_ACTIVE_VIEWPORT_ID:{actions:(0,i.kp)({activeViewportId:(e,t)=>t.activeViewportId})}}},promptBeginTracking:{invoke:{src:"promptBeginTracking",onDone:[{target:"tracking",actions:["setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"labellingOnly",cond:"isLabelOnMeasureAndShouldKillMachine"},{target:"off",cond:"shouldKillMachine"},{target:"idle"}],onError:{target:"idle"}}},tracking:{on:{TRACK_SERIES:[{target:"promptLabelAnnotation",cond:"isLabelOnMeasure",actions:["setPreviousState"]},{target:"promptTrackNewStudy",cond:"isNewStudy"},{target:"promptTrackNewSeries",cond:"isNewSeries"}],UNTRACK_SERIES:[{target:"tracking",actions:["removeTrackedSeries","setIsDirty"],cond:"hasRemainingTrackedSeries"},{target:"idle"}],SET_TRACKED_SERIES:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries"]}],SAVE_REPORT:"promptSaveReport",SET_DIRTY:[{target:"tracking",actions:["setIsDirty"],cond:"shouldSetDirty"},{target:"tracking"}]}},promptTrackNewSeries:{invoke:{src:"promptTrackNewSeries",onDone:[{target:"tracking",actions:["addTrackedSeries","setIsDirty"],cond:"shouldAddSeries"},{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"promptSaveReport",cond:"shouldPromptSaveReport"},{target:"tracking"}],onError:{target:"idle"}}},promptTrackNewStudy:{invoke:{src:"promptTrackNewStudy",onDone:[{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"tracking",actions:["ignoreSeries"],cond:"shouldAddIgnoredSeries"},{target:"promptSaveReport",cond:"shouldPromptSaveReport"},{target:"tracking"}],onError:{target:"idle"}}},promptSaveReport:{invoke:{src:"promptSaveReport",onDone:[{target:"idle",actions:["clearAllMeasurements","showStructuredReportDisplaySetInActiveViewport"],cond:"shouldSaveAndContinueWithSameReport"},{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries"],cond:"shouldSaveAndStartNewReport"},{target:"tracking"}],onError:{target:"idle"}}},promptHydrateStructuredReport:{invoke:{src:"promptHydrateStructuredReport",onDone:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","jumpToSameImageInActiveViewport","setIsDirtyToClean"],cond:"shouldHydrateStructuredReport"},{target:"idle",actions:["ignoreHydrationForSRSeries"],cond:"shouldIgnoreHydrationForSR"}],onError:{target:"idle"}}},hydrateStructuredReport:{invoke:{src:"hydrateStructuredReport",onDone:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","jumpToSameImageInActiveViewport","setIsDirtyToClean"]}],onError:{target:"idle"}}},promptLabelAnnotation:{invoke:{src:"promptLabelAnnotation",onDone:[{target:"labellingOnly",cond:"wasLabellingOnly"},{target:"promptBeginTracking",cond:"wasIdle"},{target:"promptTrackNewStudy",cond:"wasTrackingAndIsNewStudy"},{target:"promptTrackNewSeries",cond:"wasTrackingAndIsNewSeries"},{target:"tracking",cond:"wasTracking"},{target:"off"}]}}},strict:!0},S={services:{promptBeginTracking:(e,t)=>{},promptTrackNewStudy:(e,t)=>{},promptTrackNewSeries:(e,t)=>{}},actions:{discardPreviouslyTrackedMeasurements:(e,t)=>{console.log("discardPreviouslyTrackedMeasurements: not implemented")},clearAllMeasurements:(e,t)=>{console.log("clearAllMeasurements: not implemented")},jumpToFirstMeasurementInActiveViewport:(e,t)=>{console.warn("jumpToFirstMeasurementInActiveViewport: not implemented")},showStructuredReportDisplaySetInActiveViewport:(e,t)=>{console.warn("showStructuredReportDisplaySetInActiveViewport: not implemented")},clearContext:(0,i.kp)({trackedStudy:"",trackedSeries:[],ignoredSeries:[],prevTrackedStudy:"",prevTrackedSeries:[],prevIgnoredSeries:[]}),setTrackedStudyAndSeries:(0,i.kp)(((e,t)=>({prevTrackedStudy:e.trackedStudy,prevTrackedSeries:e.trackedSeries.slice(),prevIgnoredSeries:e.ignoredSeries.slice(),trackedStudy:t.data.StudyInstanceUID,trackedSeries:[t.data.SeriesInstanceUID],ignoredSeries:[]}))),setTrackedStudyAndMultipleSeries:(0,i.kp)(((e,t)=>{const n=t.StudyInstanceUID||t.data.StudyInstanceUID,s=t.SeriesInstanceUIDs||t.data.SeriesInstanceUIDs;return{prevTrackedStudy:e.trackedStudy,prevTrackedSeries:e.trackedSeries.slice(),prevIgnoredSeries:e.ignoredSeries.slice(),trackedStudy:n,trackedSeries:[...e.trackedSeries,...s],ignoredSeries:[]}})),setIsDirtyToClean:(0,i.kp)(((e,t)=>({isDirty:!1}))),setIsDirty:(0,i.kp)(((e,t)=>({isDirty:!0}))),ignoreSeries:(0,i.kp)(((e,t)=>({prevIgnoredSeries:[...e.ignoredSeries],ignoredSeries:[...e.ignoredSeries,t.data.SeriesInstanceUID]}))),ignoreHydrationForSRSeries:(0,i.kp)(((e,t)=>({ignoredSRSeriesForHydration:[...e.ignoredSRSeriesForHydration,t.data.srSeriesInstanceUID]}))),addTrackedSeries:(0,i.kp)(((e,t)=>({prevTrackedSeries:[...e.trackedSeries],trackedSeries:[...e.trackedSeries,t.data.SeriesInstanceUID]}))),removeTrackedSeries:(0,i.kp)(((e,t)=>({prevTrackedSeries:e.trackedSeries.slice().filter((e=>e!==t.SeriesInstanceUID)),trackedSeries:e.trackedSeries.slice().filter((e=>e!==t.SeriesInstanceUID))}))),setPreviousState:(0,i.kp)(((e,t,n)=>({prevState:n.state.value})))},guards:{shouldSetDirty:(e,t)=>void 0===t.SeriesInstanceUID||e.trackedSeries.includes(t.SeriesInstanceUID),wasLabellingOnly:(e,t,n)=>"labellingOnly"===e.prevState,wasIdle:(e,t,n)=>"idle"===e.prevState,wasTracking:(e,t,n)=>"tracking"===e.prevState,wasTrackingAndIsNewStudy:(e,t,n)=>"tracking"===e.prevState&&!e.ignoredSeries.includes(t.data.SeriesInstanceUID)&&e.trackedStudy!==t.data.StudyInstanceUID,wasTrackingAndIsNewSeries:(e,t,n)=>"tracking"===e.prevState&&!e.ignoredSeries.includes(t.data.SeriesInstanceUID)&&!e.trackedSeries.includes(t.data.SeriesInstanceUID),shouldKillMachine:(e,t)=>t.data&&t.data.userResponse===u.NO_NEVER,shouldAddSeries:(e,t)=>t.data&&t.data.userResponse===u.ADD_SERIES,shouldSetStudyAndSeries:(e,t)=>t.data&&t.data.userResponse===u.SET_STUDY_AND_SERIES,shouldAddIgnoredSeries:(e,t)=>t.data&&t.data.userResponse===u.NO_NOT_FOR_SERIES,shouldPromptSaveReport:(e,t)=>t.data&&t.data.userResponse===u.CREATE_REPORT,shouldIgnoreHydrationForSR:(e,t)=>t.data&&t.data.userResponse===u.CANCEL,shouldSaveAndContinueWithSameReport:(e,t)=>t.data&&t.data.userResponse===u.CREATE_REPORT&&!0===t.data.isBackupSave,shouldSaveAndStartNewReport:(e,t)=>t.data&&t.data.userResponse===u.CREATE_REPORT&&!1===t.data.isBackupSave,shouldHydrateStructuredReport:(e,t)=>t.data&&t.data.userResponse===u.HYDRATE_REPORT,hasRemainingTrackedSeries:(e,t)=>e.trackedSeries.length>1||!e.trackedSeries.includes(t.SeriesInstanceUID),hasNotIgnoredSRSeriesForHydration:(e,t)=>!e.ignoredSRSeriesForHydration.includes(t.SeriesInstanceUID),isNewStudy:(e,t)=>!e.ignoredSeries.includes(t.SeriesInstanceUID)&&e.trackedStudy!==t.StudyInstanceUID,isNewSeries:(e,t)=>!e.ignoredSeries.includes(t.SeriesInstanceUID)&&!e.trackedSeries.includes(t.SeriesInstanceUID)}};var p=n(40680);const m={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3};const y=function({servicesManager:e,extensionManager:t},n,s){const{uiViewportDialogService:a}=e.services,r=t._appConfig,{viewportId:i,StudyInstanceUID:o,SeriesInstanceUID:d}=s.data||s;return new Promise((async function(e,t){let n=r?.disableConfirmationPrompts?m.SET_STUDY_AND_SERIES:await function(e,t){return new Promise((function(n,s){const a=p.A.t("MeasurementTable:Track measurements for this series?"),r=[{id:"prompt-begin-tracking-cancel",type:c.Ny.NW.secondary,text:p.A.t("Common:No"),value:m.CANCEL},{id:"prompt-begin-tracking-no-do-not-ask-again",type:c.Ny.NW.secondary,text:p.A.t("MeasurementTable:No, do not ask again"),value:m.NO_NEVER},{id:"prompt-begin-tracking-yes",type:c.Ny.NW.primary,text:p.A.t("Common:Yes"),value:m.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,id:"measurement-tracking-prompt-begin-tracking",type:"info",message:a,actions:r,onSubmit:i,onOutsideClick:()=>{e.hide(),n(m.CANCEL)},onKeyPress:e=>{if("Enter"===e.key){const e=r.find((e=>"prompt-begin-tracking-yes"===e.id));i(e.value)}}})}))}(a,i);e({userResponse:n,StudyInstanceUID:o,SeriesInstanceUID:d,viewportId:i})}))},g={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const I=function({servicesManager:e,extensionManager:t},n,s){const{UIViewportDialogService:a}=e.services,{viewportId:r,StudyInstanceUID:i,SeriesInstanceUID:o}=s.data||s;return new Promise((async function(e,t){let s=await function(e,t){return new Promise((function(n,s){const a="Do you want to add this measurement to the existing report?",r=[{type:c.Ny.NW.secondary,text:"Cancel",value:g.CANCEL},{type:c.Ny.NW.primary,text:"Create new report",value:g.CREATE_REPORT},{type:c.Ny.NW.primary,text:"Add to existing report",value:g.ADD_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"info",message:a,actions:r,onSubmit:i,onOutsideClick:()=>{e.hide(),n(g.CANCEL)}})}))}(a,r);s===g.CREATE_REPORT&&(s=n.isDirty?await function(e,t){return new Promise((function(n,s){const a="You have existing tracked measurements. What would you like to do with your existing tracked measurements?",r=[{type:"cancel",text:"Cancel",value:g.CANCEL},{type:"secondary",text:"Save",value:g.CREATE_REPORT},{type:"primary",text:"Discard",value:g.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"warning",message:a,actions:r,onSubmit:i,onOutsideClick:()=>{e.hide(),n(g.CANCEL)}})}))}(a,r):g.SET_STUDY_AND_SERIES),e({userResponse:s,StudyInstanceUID:i,SeriesInstanceUID:o,viewportId:r,isBackupSave:!1})}))},D={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const E=function({servicesManager:e,extensionManager:t},n,s){const{uiViewportDialogService:a}=e.services,{viewportId:r,StudyInstanceUID:i,SeriesInstanceUID:o}=s.data||s;return new Promise((async function(e,t){let s=await function(e,t){return new Promise((function(n,s){const a=p.A.t("MeasurementTable:Track measurements for this series?"),r=[{type:"cancel",text:p.A.t("MeasurementTable:No"),value:D.CANCEL},{type:"secondary",text:p.A.t("MeasurementTable:No, do not ask again"),value:D.NO_NOT_FOR_SERIES},{type:"primary",text:p.A.t("MeasurementTable:Yes"),value:D.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"info",message:a,actions:r,onSubmit:i,onOutsideClick:()=>{e.hide(),n(D.CANCEL)},onKeyPress:e=>{if("Enter"===e.key){const e=r.find((e=>e.value===D.SET_STUDY_AND_SERIES));i(e.value)}}})}))}(a,r);s===D.SET_STUDY_AND_SERIES&&(s=n.isDirty?await function(e,t){return new Promise((function(n,s){const a="Measurements cannot span across multiple studies. Do you want to save your tracked measurements?",r=[{type:"cancel",text:"Cancel",value:D.CANCEL},{type:"secondary",text:"No, discard previously tracked series & measurements",value:D.SET_STUDY_AND_SERIES},{type:"primary",text:"Yes",value:D.CREATE_REPORT}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"warning",message:a,actions:r,onSubmit:i,onOutsideClick:()=>{e.hide(),n(D.CANCEL)}})}))}(a,r):D.SET_STUDY_AND_SERIES),e({userResponse:s,StudyInstanceUID:i,SeriesInstanceUID:o,viewportId:r,isBackupSave:!1})}))};var v=n(85687);const R={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4,HYDRATE_REPORT:5};const T=function({servicesManager:e,extensionManager:t,appConfig:n},s,a){const{uiViewportDialogService:r,displaySetService:i}=e.services,{viewportId:o,displaySetInstanceUID:d}=a,u=i.getDisplaySetByUID(d);return new Promise((async function(s,i){const l=n?.disableConfirmationPrompts?R.HYDRATE_REPORT:await function(e,t){return new Promise((function(n,s){const a="Do you want to continue tracking measurements for this study?",r=[{id:"no-hydrate",type:c.Ny.NW.secondary,text:"No",value:R.CANCEL},{id:"yes-hydrate",type:c.Ny.NW.primary,text:"Yes",value:R.HYDRATE_REPORT}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"info",message:a,actions:r,onSubmit:i,onOutsideClick:()=>{e.hide(),n(R.CANCEL)},onKeyPress:e=>{if("Enter"===e.key){const e=r.find((e=>e.value===R.HYDRATE_REPORT));i(e.value)}}})}))}(r,o);let S,p;if(l===R.HYDRATE_REPORT){console.warn("!! HYDRATING STRUCTURED REPORT");const s=(0,v.hydrateStructuredReport)({servicesManager:e,extensionManager:t,appConfig:n},d);S=s.StudyInstanceUID,p=s.SeriesInstanceUIDs}s({userResponse:l,displaySetInstanceUID:a.displaySetInstanceUID,srSeriesInstanceUID:u.SeriesInstanceUID,viewportId:o,StudyInstanceUID:S,SeriesInstanceUIDs:p})}))};const k=function({servicesManager:e,extensionManager:t,appConfig:n},s,a){const{displaySetService:r}=e.services,{viewportId:i,displaySetInstanceUID:o}=a,c=r.getDisplaySetByUID(o);return new Promise(((s,r)=>{const d=(0,v.hydrateStructuredReport)({servicesManager:e,extensionManager:t,appConfig:n},o),u=d.StudyInstanceUID,l=d.SeriesInstanceUIDs;s({displaySetInstanceUID:a.displaySetInstanceUID,srSeriesInstanceUID:c.SeriesInstanceUID,viewportId:i,StudyInstanceUID:u,SeriesInstanceUIDs:l})}))};var f=n(45981);const w=s.createContext();w.displayName="TrackedMeasurementsContext";const h=()=>(0,s.useContext)(w),N="@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr";function A({servicesManager:e,commandsManager:t,extensionManager:n},{children:a}){const[r]=(0,f.r)(),[p,m]=(0,c.ih)(),{activeViewportId:g,viewports:D}=p,{measurementService:v,displaySetService:R,customizationService:h}=e.services,A=Object.assign({},S);A.actions=Object.assign({},A.actions,{jumpToFirstMeasurementInActiveViewport:(e,t)=>{const{trackedStudy:n,trackedSeries:s,activeViewportId:a}=e,r=v.getMeasurements().filter((e=>n===e.referenceStudyUID&&s.includes(e.referenceSeriesUID)));console.log("jumping to measurement reset viewport",a,r[0]);const i=r[0].displaySetInstanceUID,o=R.getDisplaySetByUID(i).images,c=o[0].imageId.startsWith("volumeId"),d=r[0].data;let u=0;!c&&d&&(u=o.findIndex((e=>{const t=Object.keys(d)[0].substring(8);return e.imageId===t})),-1===u&&(console.warn("Could not find image index for tracked measurement, using 0"),u=0)),m.setDisplaySetsForViewport({viewportId:a,displaySetInstanceUIDs:[i],viewportOptions:{initialImageOptions:{index:u}}})},jumpToSameImageInActiveViewport:(e,n)=>{const{trackedStudy:s,trackedSeries:a,activeViewportId:r}=e,i=v.getMeasurements().filter((e=>s===e.referenceStudyUID&&a.includes(e.referenceSeriesUID)))[0].displaySetInstanceUID;t.runCommand("updateStoredPositionPresentation",{viewportId:r,displaySetInstanceUID:i}),m.setDisplaySetsForViewport({viewportId:r,displaySetInstanceUIDs:[i]})},showStructuredReportDisplaySetInActiveViewport:(e,t)=>{if(t.data.createdDisplaySetInstanceUIDs.length>0){const e=t.data.createdDisplaySetInstanceUIDs[0];m.setDisplaySetsForViewport({viewportId:t.data.viewportId,displaySetInstanceUIDs:[e]})}},discardPreviouslyTrackedMeasurements:(e,t)=>{const n=v.getMeasurements().filter((t=>e.prevTrackedSeries.includes(t.referenceSeriesUID))).map((e=>e.id));for(let e=0;e<n.length;e++)v.remove(n[e])},clearAllMeasurements:(e,t)=>{const n=v.getMeasurements().map((e=>e.uid));for(let e=0;e<n.length;e++)v.remove(n[e])}}),A.services=Object.assign({},A.services,{promptBeginTracking:y.bind(null,{servicesManager:e,extensionManager:n,appConfig:r}),promptTrackNewSeries:I.bind(null,{servicesManager:e,extensionManager:n,appConfig:r}),promptTrackNewStudy:E.bind(null,{servicesManager:e,extensionManager:n,appConfig:r}),promptSaveReport:d.promptSaveReport.bind(null,{servicesManager:e,commandsManager:t,extensionManager:n,appConfig:r}),promptHydrateStructuredReport:T.bind(null,{servicesManager:e,extensionManager:n,appConfig:r}),hydrateStructuredReport:k.bind(null,{servicesManager:e,extensionManager:n,appConfig:r}),promptLabelAnnotation:d.promptLabelAnnotation.bind(null,{servicesManager:e,extensionManager:n})}),A.guards=Object.assign({},A.guards,{isLabelOnMeasure:(e,t,n)=>{const s=h.get("measurementLabels");return s?.labelOnMeasure},isLabelOnMeasureAndShouldKillMachine:(e,t,n)=>{const s=h.get("measurementLabels");return t.data&&t.data.userResponse===u.NO_NEVER&&s?.labelOnMeasure}});const b=(0,s.useMemo)((()=>(0,i.u5)(l,A)),[]),[M,U]=(0,o.zl)(b);return(0,s.useEffect)((()=>{U("UPDATE_ACTIVE_VIEWPORT_ID",{activeViewportId:g})}),[g,U]),(0,s.useEffect)((()=>{(async()=>{if(D.size>0){const t=D.get(g);if(!t||!t?.displaySetInstanceUIDs?.length)return;const{displaySetService:n}=e.services,s=n.getDisplaySetByUID(t.displaySetInstanceUIDs[0]);if(!s)return;s.SOPClassHandlerId===N&&!s.isLoaded&&s.load&&await s.load(),s.SOPClassHandlerId===N&&!0===s.isRehydratable&&(console.log("sending event...",M),U("PROMPT_HYDRATE_SR",{displaySetInstanceUID:s.displaySetInstanceUID,SeriesInstanceUID:s.SeriesInstanceUID,viewportId:g}))}})()}),[M,g,U,e.services,D]),s.createElement(w.Provider,{value:[M,U]},a)}A.propTypes={children:r().oneOf([r().func,r().node]),servicesManager:r().object.isRequired,commandsManager:r().object.isRequired,extensionManager:r().object.isRequired,appConfig:r().object};const b=function({servicesManager:e,extensionManager:t,commandsManager:n}){const s=A.bind(null,{servicesManager:e,extensionManager:t,commandsManager:n});return[{name:"TrackedMeasurementsContext",context:w,provider:s}]}},71903:(e,t,n)=>{n.r(t),n.d(t,{default:()=>V});var s=n(79044),a=n(86326),r=n(97598),i=n.n(r),o=n(49348),c=n(99993),d=n(29463),u=n(35647),l=n(35570),S=n(55630);const p=[{id:"settings",iconName:"Settings",value:!1}],m=[{id:"list",iconName:"ListView",selected:!1},{id:"thumbnails",iconName:"ThumbnailView",selected:!0}],{formatDate:y,createStudyBrowserTabs:g}=d.Wp,I=["SR","SEG","SM","RTSTRUCT","RTPLAN","RTDOSE","DOC","OT","PMAP"];function D({servicesManager:e,getImageSrc:t,getStudiesForPatientByMRN:n,requestDisplaySetCreationForStudy:r,dataSource:i,commandsManager:d}){const{displaySetService:D,uiDialogService:R,hangingProtocolService:T,uiNotificationService:k,measurementService:f,studyPrefetcherService:w,customizationService:h}=e.services,N=(0,o.Zp)(),{mode:A}=h.getCustomization("PanelStudyBrowser.studyMode",{id:"default",mode:"all"}),{t:b}=(0,c.Bd)("Common"),{StudyInstanceUIDs:M}=(0,u.Bz)(),[{activeViewportId:U,viewports:C,isHangingProtocolLayout:_},P]=(0,u.ih)(),[O,x]=(0,s.B)(),[V,L]=(0,a.useState)(A),[F,H]=(0,a.useState)([...M]),[j,Y]=(0,a.useState)([]),[B,W]=(0,a.useState)(!1),[q,z]=(0,a.useState)([]),[K,G]=(0,a.useState)({}),[$,J]=(0,a.useState)({}),[Z,Q]=(0,a.useState)(null),[X,ee]=(0,a.useState)(h.getCustomization("studyBrowser.viewPresets")?.value||m),[te,ne]=(0,a.useState)(p),se=C.get(U)?.displaySetInstanceUIDs,{trackedSeries:ae}=O.context;(0,a.useEffect)((()=>{L(A)}),[A]),(0,a.useEffect)((()=>{M.forEach((e=>async function(e){const t=await i.query.studies.search({studyInstanceUid:e});if(!t?.length)throw N("/notfoundstudy","_self"),new Error("Invalid study URL");let s=t;try{s=await n(t)}catch(e){console.warn(e)}const a=s.map((e=>({AccessionNumber:e.accession,StudyDate:e.date,StudyDescription:e.description,NumInstances:e.instances,ModalitiesInStudy:e.modalities,PatientID:e.mrn,PatientName:e.patientName,StudyInstanceUID:e.studyInstanceUid,StudyTime:e.time}))).map((e=>({studyInstanceUid:e.StudyInstanceUID,date:y(e.StudyDate)||b("NoStudyDate"),description:e.StudyDescription,modalities:e.ModalitiesInStudy,numInstances:e.NumInstances})));Y((e=>{const t=[...e];for(const n of a)e.find((e=>e.studyInstanceUid===n.studyInstanceUid))||t.push(n);return t}))}(e)))}),[M,n]),(0,a.useEffect)((()=>{if(!B)return void(U&&window.setTimeout((()=>W(!0)),250));let e=D.activeDisplaySets;e=e.filter((e=>!I.includes(e.Modality))),e.length&&e.forEach((async e=>{const n={},s=D.getDisplaySetByUID(e.displaySetInstanceUID),a=E(s,i.getImageIdsForDisplaySet(s));a&&!s?.unsupported&&(n[e.displaySetInstanceUID]=await t(a),J((e=>({...e,...n}))))}))}),[D,i,t,U,B]),(0,a.useEffect)((()=>{const e=D.activeDisplaySets;if(!e.length)return;const t=v(e,K,$,ae,C,P,i,D,R,k);z(t)}),[D.activeDisplaySets,K,ae,C,i,$]),(0,a.useEffect)((()=>{const{unsubscribe:e}=w.subscribe(w.EVENTS.DISPLAYSET_LOAD_PROGRESS,(e=>{const{displaySetInstanceUID:t,loadingProgress:n}=e;G((e=>({...e,[t]:n})))}));return()=>e()}),[w]),(0,a.useEffect)((()=>{const e=D.subscribe(D.EVENTS.DISPLAY_SETS_ADDED,(e=>{if(!B)return;const{displaySetsAdded:n,options:s}=e;n.forEach((async e=>{const n=e.displaySetInstanceUID,a={},r=D.getDisplaySetByUID(n);if(r?.unsupported)return;s.madeInClient&&Q(n);const o=E(r,i.getImageIdsForDisplaySet(r));o&&(a[n]=await t(o),J((e=>({...e,...a}))))}))}));return()=>{e.unsubscribe()}}),[D,i,t,$,ae,C]),(0,a.useEffect)((()=>{const e=D.subscribe(D.EVENTS.DISPLAY_SETS_CHANGED,(e=>{const t=v(e,K,$,ae,C,P,i,D,R,k);z(t)})),t=D.subscribe(D.EVENTS.DISPLAY_SET_SERIES_METADATA_INVALIDATED,(()=>{const e=v(D.getActiveDisplaySets(),K,$,ae,C,P,i,D,R,k);z(e)}));return()=>{e.unsubscribe(),t.unsubscribe()}}),[K,$,ae,C,i,D]);const re=g(M,j,q);(0,a.useEffect)((()=>{if(Z){const e=Z,t=document.getElementById(`thumbnail-${e}`);t&&"function"==typeof t.scrollIntoView&&(t.scrollIntoView({behavior:"smooth"}),Q(null))}}),[Z,F,V]),(0,a.useEffect)((()=>{if(!Z)return;const e=function(e,t){for(let n=0;n<t.length;n++){const{studies:s}=t[n];for(let a=0;a<s.length;a++){const{displaySets:r}=s[a];for(let i=0;i<r.length;i++){if(r[i].displaySetInstanceUID===e)return{tabName:t[n].name,StudyInstanceUID:s[a].studyInstanceUid}}}}}(Z,re);if(!e)return void console.warn("jumpToThumbnail: displaySet thumbnail not found.");const{tabName:t,StudyInstanceUID:n}=e;L(t);if(!F.includes(n)){const e=[...F,n];H(e)}}),[F,Z,re]);const ie=e=>{R.create({id:"untrack-series",centralize:!0,isDraggable:!1,showOverlay:!0,content:u.lG,contentProps:{title:"Untrack Series",body:()=>a.createElement("div",{className:"bg-primary-dark p-4 text-white"},a.createElement("p",null,"Are you sure you want to untrack this series?"),a.createElement("p",{className:"mt-2"},"This action cannot be undone and will delete all your existing measurements.")),actions:[{id:"cancel",text:"Cancel",type:u.Ny.NW.secondary},{id:"yes",text:"Yes",type:u.Ny.NW.primary,classes:["untrack-yes-button"]}],onClose:()=>R.dismiss({id:"untrack-series"}),onSubmit:async({action:t})=>{switch(t.id){case"yes":(()=>{const t=D.getDisplaySetByUID(e);x("UNTRACK_SERIES",{SeriesInstanceUID:t.SeriesInstanceUID}),f.getMeasurements().forEach((e=>{e.referenceSeriesUID===t.SeriesInstanceUID&&f.remove(e.uid)}))})(),R.dismiss({id:"untrack-series"});break;case"cancel":R.dismiss({id:"untrack-series"})}}}})};return a.createElement(a.Fragment,null,a.createElement(a.Fragment,null,a.createElement(S.PanelStudyBrowserHeader,{viewPresets:X,updateViewPresetValue:e=>{if(!e)return;const t=X.map((t=>(t.selected=t.id===e.id,t)));ee(t)},actionIcons:te,updateActionIconValue:e=>{e.value=!e.value;const t=[...te];ne(t)}}),a.createElement(l.wv,{orientation:"horizontal",className:"bg-black",thickness:"2px"})),a.createElement(l.M4,{tabs:re,servicesManager:e,activeTabName:V,expandedStudyInstanceUIDs:F,onClickStudy:function(e){const t=F.includes(e),n=t?[...F.filter((t=>t!==e))]:[...F,e];if(H(n),!t){r(D,e,!0)}},onClickTab:e=>{L(e)},onClickUntrack:e=>{ie(e)},onClickThumbnail:()=>{},onDoubleClickThumbnail:e=>{let t=[];const n=U;try{t=T.getViewportsRequireUpdate(n,e,_)}catch(e){console.warn(e),k.show({title:"Thumbnail Double Click",message:"The selected display sets could not be added to the viewport due to a mismatch in the Hanging Protocol rules.",type:"error",duration:3e3})}P.setDisplaySetsForViewports(t)},activeDisplaySetInstanceUIDs:se,showSettings:te.find((e=>"settings"===e.id)).value,viewPresets:X,onThumbnailContextMenu:(e,t)=>{d.runCommand(e,t)}}))}function E(e,t){let n;if(e.isDynamicVolume){const t=e.dynamicVolumeInfo.timePoints,s=t[Math.floor(t.length/2)];n=s[Math.floor(s.length/2)]}else n=t[Math.floor(t.length/2)];return n}function v(e,t,n,s,r,i,o,c,d,l){const S=[],p=[];return e.filter((e=>!e.excludeFromThumbnailBrowser)).forEach((e=>{const r=n[e.displaySetInstanceUID],m=function(e){if(I.includes(e.Modality)||e?.unsupported)return"thumbnailNoImage";return"thumbnailTracked"}(e),g=(i.getNumViewportPanes(),"thumbnailTracked"===m?S:p),{displaySetInstanceUID:D}=e,E=t?.[D],v={displaySetInstanceUID:D,description:e.SeriesDescription,seriesNumber:e.SeriesNumber,modality:e.Modality,seriesDate:y(e.SeriesDate),numInstances:e.numImageFrames,loadingProgress:E,countIcon:e.countIcon,messages:e.messages,StudyInstanceUID:e.StudyInstanceUID,componentType:m,imageSrc:r,dragData:{type:"displayset",displaySetInstanceUID:D},isTracked:s.includes(e.SeriesInstanceUID),isHydratedForDerivedDisplaySet:e.isHydrated};"thumbnailNoImage"===m&&(o.reject&&o.reject.series?(v.canReject=!e?.unsupported,v.onReject=()=>{d.create({id:"ds-reject-sr",centralize:!0,isDraggable:!1,showOverlay:!0,content:u.lG,contentProps:{title:"Delete Report",body:()=>a.createElement("div",{className:"bg-primary-dark p-4 text-white"},a.createElement("p",null,"Are you sure you want to delete this report?"),a.createElement("p",{className:"mt-2"},"This action cannot be undone.")),actions:[{id:"cancel",text:"Cancel",type:u.Ny.NW.secondary},{id:"yes",text:"Yes",type:u.Ny.NW.primary,classes:["reject-yes-button"]}],onClose:()=>d.dismiss({id:"ds-reject-sr"}),onShow:()=>{document.querySelector(".reject-yes-button").focus()},onSubmit:async({action:t})=>{switch(t.id){case"yes":try{await o.reject.series(e.StudyInstanceUID,e.SeriesInstanceUID),c.deleteDisplaySet(D),d.dismiss({id:"ds-reject-sr"}),l.show({title:"Delete Report",message:"Report deleted successfully",type:"success"})}catch(e){d.dismiss({id:"ds-reject-sr"}),l.show({title:"Delete Report",message:"Failed to delete report",type:"error"})}break;case"cancel":d.dismiss({id:"ds-reject-sr"})}}}})}):v.canReject=!1),g.push(v)})),[...S,...p]}D.propTypes={servicesManager:i().object.isRequired,dataSource:i().shape({getImageIdsForDisplaySet:i().func.isRequired}).isRequired,getImageSrc:i().func.isRequired,getStudiesForPatientByMRN:i().func.isRequired,requestDisplaySetCreationForStudy:i().func.isRequired};const R=function(e,t){return new Promise(((n,s)=>{const a=document.createElement("canvas");e.utilities.loadImageToCanvas({canvas:a,imageId:t,thumbnail:!0}).then((e=>{n(a.toDataURL())})).catch(s)}))};const T=function(e,t,n,s){t.activeDisplaySets.some((e=>e.StudyInstanceUID===n))||e.retrieve.series.metadata({StudyInstanceUID:n,madeInClient:s})};function k({commandsManager:e,extensionManager:t,servicesManager:n}){const s=t.getActiveDataSource()[0],r=function(e){const t=e.getModuleEntry("@ohif/extension-default.utilityModule.common"),{getStudiesForPatientByMRN:n}=t.exports;return n}(t),i=r.bind(null,s),o=(0,a.useCallback)(function(e){const t=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common");try{const{cornerstone:e}=t.exports.getCornerstoneLibraries();return R.bind(null,e)}catch(e){throw new Error("Required command not found")}}(t),[]),c=T.bind(null,s);return a.createElement(D,{servicesManager:n,commandsManager:e,dataSource:s,getImageSrc:o,getStudiesForPatientByMRN:i,requestDisplaySetCreationForStudy:c})}k.propTypes={commandsManager:i().object.isRequired,extensionManager:i().object.isRequired,servicesManager:i().object.isRequired};const f=k;var w=n(11185);const{downloadCSVReport:h,formatDate:N}=d.Wp,A={key:void 0,date:"",modality:"",description:""};const b=function({servicesManager:e,extensionManager:t,commandsManager:n}){const[r]=(0,u.ih)(),{t:i}=(0,c.Bd)("MeasurementTable"),{measurementService:o,customizationService:S,uiDialogService:p}=e.services,[m,y]=(0,s.B)(),{trackedStudy:g,trackedSeries:I}=m.context,[D,E]=(0,a.useState)(A);(0,a.useEffect)((()=>{(async()=>{if(m.matches("tracking")&&g){const e=d.H8.getStudy(g);if(!e||!e.series||0===e.series.length)return void console.debug("Study metadata not available");const t=e.series[0].instances[0],{StudyDate:n,StudyDescription:s}=t,a=new Set;e.series.forEach((e=>{I.includes(e.SeriesInstanceUID)&&a.add(e.instances[0].Modality)}));const r=Array.from(a).join("/");E((e=>e.key!==g?{key:g,date:n,modality:r,description:s}:e))}else g||E(A)})()}),[m,g,I]);const{disableEditing:v}=S.getCustomization("PanelMeasurement.disableEditing",{id:"default.disableEditing",disableEditing:!1});return a.createElement(a.Fragment,null,D.key&&a.createElement(l.u3,{date:N(D.date),description:D.description}),a.createElement(w.PanelMeasurement,{servicesManager:e,extensionManager:t,commandsManager:n,measurementFilter:e=>g===e.referenceStudyUID&&I.includes(e.referenceSeriesUID),customHeader:({additionalFindings:e,measurements:t})=>{const n=0===e.length&&0===t.length;return v||n?null:a.createElement("div",{className:"bg-background flex h-9 w-full items-center rounded pr-0.5"},a.createElement("div",{className:"flex space-x-1"},a.createElement(l.$n,{size:"sm",variant:"ghost",className:"pl-1.5",onClick:()=>{const e=o.getMeasurements().filter((e=>g===e.referenceStudyUID&&I.includes(e.referenceSeriesUID)));h(e)}},a.createElement(l.FI.Download,{className:"h-5 w-5"}),a.createElement("span",{className:"pl-1"},"CSV")),a.createElement(l.$n,{size:"sm",variant:"ghost",className:"pl-0.5",onClick:()=>{y("SAVE_REPORT",{viewportId:r.activeViewportId,isBackupSave:!0})}},a.createElement(l.FI.Add,null),"Create SR"),a.createElement(l.$n,{size:"sm",variant:"ghost",className:"pl-0.5",onClick:()=>{p.create({id:"delete-all-measurements",centralize:!0,isDraggable:!1,showOverlay:!0,content:u.lG,contentProps:{title:"Delete All Measurements",body:()=>a.createElement("div",{className:"bg-primary-dark text-white"},a.createElement("p",null,"Are you sure you want to delete all measurements?"),a.createElement("p",{className:"mt-2"},"This action cannot be undone.")),actions:[{id:"cancel",text:"Cancel",type:u.Ny.NW.secondary},{id:"yes",text:"Delete All",type:u.Ny.NW.primary,classes:["delete-all-yes-button"]}],onClose:()=>p.dismiss({id:"delete-all-measurements"}),onSubmit:async({action:e})=>{switch(e.id){case"yes":o.clearMeasurements(),p.dismiss({id:"delete-all-measurements"});break;case"cancel":p.dismiss({id:"delete-all-measurements"})}}}})}},a.createElement(l.FI.Delete,null),"Delete All")))}}))};var M=n(40680);function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)({}).hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},U.apply(null,arguments)}const C=function({commandsManager:e,extensionManager:t,servicesManager:n}){return[{name:"seriesList",iconName:"tab-studies",iconLabel:"Studies",label:M.A.t("SidePanel:Studies"),component:s=>a.createElement(f,U({},s,{commandsManager:e,extensionManager:t,servicesManager:n}))},{name:"trackedMeasurements",iconName:"tab-linear",iconLabel:"Measure",label:M.A.t("SidePanel:Measurements"),component:s=>a.createElement(b,U({},s,{commandsManager:e,extensionManager:t,servicesManager:n}))}]};function _(){return _=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)({}).hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},_.apply(null,arguments)}const P=a.lazy((()=>n.e(9862).then(n.bind(n,49862)))),O=e=>a.createElement(a.Suspense,{fallback:a.createElement("div",null,"Loading...")},a.createElement(P,e));const x=function({servicesManager:e,commandsManager:t,extensionManager:n}){return[{name:"cornerstone-tracked",component:s=>a.createElement(O,_({servicesManager:e,commandsManager:t,extensionManager:n},s))}]},V={id:JSON.parse('{"UU":"@ohif/extension-measurement-tracking"}').UU,getContextModule:s.A,getPanelModule:C,getViewportModule:x}}}]);
//# sourceMappingURL=3200.bundle.88378f22c50a145aee5a.js.map